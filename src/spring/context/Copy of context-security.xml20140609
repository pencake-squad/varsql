<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<security:http pattern="/webstatic/**" security="none" />
	
	<security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled" />

	<security:http auto-config="true">
		<security:form-login
			login-page="/login.do"
			login-processing-url="/login_check.do"
			default-target-url="/main.do" 
			authentication-failure-url="/login.do?fail" 
		/>

		<security:logout 
			logout-success-url="/logout.do" 
			invalidate-session="true" />
	</security:http>
	
	
	<bean id="customAuthenticationProvider" class="com.varsql.auth.UserService"></bean>
	
	<security:authentication-manager alias="authenticationManager">
        <security:authentication-provider
            user-service-ref="customAuthenticationProvider">
            <!-- security:password-encoder hash="md5"
                base64="true">
                <security:salt-source user-property="salt" />
            </security:password-encoder -->
        </security:authentication-provider>
    </security:authentication-manager>
    
	<!-- Filter for role checking -->
	
	<bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
    <property name="authenticationManager" ref="authenticationManager"/>
    <property name="accessDecisionManager" ref="httpRequestAccessDecisionManager"/>
    <property name="securityMetadataSource">
        <security:filter-security-metadata-source lowercase-comparisons="true" request-matcher="ant" use-expressions="true">
            <security:intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />              
            <security:intercept-url pattern="/manage/**" access="hasAnyRole('MANAGE','ADMIN')"/>
            <security:intercept-url pattern="/user/**" access="hasAnyRole('USER','MANAGE','ADMIN')"/>
                 
            <security:intercept-url pattern="/**" access="isAuthenticated()"/>
        </security:filter-security-metadata-source>
    </property>
</bean>

<!-- 	<bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor"> -->
<!-- 	    <property name="authenticationManager" ref="authenticationManager"/> -->
<!-- 	    <property name="accessDecisionManager" ref="httpRequestAccessDecisionManager"/> -->
<!-- 	    <property name="securityMetadataSource"> -->
<!-- 	        <security:filter-security-metadata-source lowercase-comparisons="true" request-matcher="ant" use-expressions="true"> -->
<!-- 				<security:intercept-url pattern="/admin/**" access="hasRole('ADMIN')" /> -->
<!-- 				<security:intercept-url pattern="/manage/**" access="hasAnyRole('MANAGE','ADMIN')" /> -->
<!-- 	        	<security:intercept-url pattern="/user/**" access="hasAnyRole('USER','MANAGE','ADMIN')" /> -->
<!-- 				<security:intercept-url pattern="/**" access="isAuthenticated()" /> -->
	            
<!-- 	            security:intercept-url pattern="/pages/Security/**" access="permitAll"/ -->
<!-- 	            security:intercept-url pattern="/pages/Settings/**" access="hasRole('SETTINGS')"/ -->
<!-- 	            security:intercept-url pattern="/servlet/Download" access="hasAnyRole('DOWNLOAD','PREMIUM_ACCOUNT')"/ -->
	                 
	            
<!-- 	        </security:filter-security-metadata-source> -->
<!-- 	    </property> -->
<!-- 	</bean> -->

	<bean id="httpRequestAccessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions" value="false" />
		<property name="decisionVoters">
			<list>
				<ref bean="webExpressionVoter" />
				<ref bean="authenticatedVoter" />
			</list>
		</property>
	</bean>

	<bean id="webExpressionVoter"
		class="org.springframework.security.web.access.expression.WebExpressionVoter" />
	<bean id="authenticatedVoter"
		class="org.springframework.security.access.vote.AuthenticatedVoter" />
	 
	<!-- security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="user" password="user" authorities="USER" />
				<security:user name="admin" password="admin" authorities="ADMIN" />
				<security:user name="manage" password="manage" authorities="MANAGE" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager -->
</beans>