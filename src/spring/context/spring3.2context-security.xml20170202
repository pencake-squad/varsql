<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<security:http pattern="/webstatic/**" security="none" />
	
	<security:http auto-config="true"/>
	
	<security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled" />
	
	<bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
	    <security:filter-chain-map path-type="ant">
	     	<security:filter-chain pattern="/login.do"  filters="securityContextPersistentFilter" />
	     	<security:filter-chain pattern="/join/**"  filters="none" />
	     	<security:filter-chain pattern="/error/**"  filters="none" />
	     	<security:filter-chain pattern="/webstatic/**"  filters="none" />
	        <security:filter-chain pattern="/**"  filters="
	               securityContextPersistentFilter,
	               logoutFilter,
	               authenticationProcessingFilter,
	               exceptionTranslationFilter,
	               filterSecurityInterceptor" />
	    </security:filter-chain-map>
	</bean>
	
	<!-- password encript -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="anonymousProvider" />
		
        <security:authentication-provider
            user-service-ref="userService">
            <!-- security:password-encoder hash="md5"
                base64="true">
                <security:salt-source user-property="salt" />
            </security:password-encoder -->
        </security:authentication-provider>
    </security:authentication-manager>
	
	<bean id="userService" class="com.varsql.auth.UserService"></bean>
	
	<bean id="securityContextPersistentFilter"
		class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
		<property name="securityContextRepository" ref="securityContextRepository" />
	</bean>

	<bean id="securityContextRepository"
		class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />
	
	<bean id="logoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg value="/login.do" />
		<constructor-arg>
            <list>
                <bean class="org.springframework.security.web.authentication.logout.CookieClearingLogoutHandler">
                    <constructor-arg>
                        <list>
                            <value>JSESSIONID</value>
                        </list>                        
                    </constructor-arg>
                </bean>
                <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
            </list>
        </constructor-arg>
		<property name="filterProcessesUrl" value="/logout.do" />
	</bean>
	
	
	<bean id="authenticationProcessingFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
	    <property name="authenticationManager" ref="authenticationManager"/>
	    <property name="usernameParameter" value="id"/>
    	<property name="passwordParameter" value="password"/>
    	<!-- property name="postOnly" value="false"/ -->
	    <property name="filterProcessesUrl" value="/login_check.do"/>
	    <property name="authenticationSuccessHandler">
	        <bean class="com.varsql.auth.VarsqlAuthenticationSuccessHandler">
	        </bean>
	    </property>
	    <property name="authenticationFailureHandler">
	        <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
	            <property name="defaultFailureUrl" value="/login.do?fail" />
	        </bean>
	    </property>
	</bean>
	
	<bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <property name="accessDeniedHandler" ref="accessDeniedHandler"/>
        <property name="authenticationEntryPoint" ref="authenticationEntryPoint"/>
	</bean>
	
	<bean id="authenticationEntryPoint"  class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
	      <property name="loginFormUrl" value="/login.do"/>
	      <property name="forceHttps" value="false"/>
	</bean>
	
	<!-- error page -->
	<bean id="accessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
	    <property name="errorPage" value="/accessDenied.do"/>
	</bean>
	
    <bean id="anonymousProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
	    <property name="key" value="unique_key_123" />
	</bean>
	
	<bean id="anonymousFilter" class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter" >
	    <property name="key" value="unique_key_123" />
	    <property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS" />
	</bean> 
    
	<!-- Filter for role checking -->
	<bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
	    <property name="authenticationManager" ref="authenticationManager"/>
	    <property name="accessDecisionManager" ref="httpRequestAccessDecisionManager"/>
	    <property name="securityMetadataSource">
	        <security:filter-security-metadata-source lowercase-comparisons="true" request-matcher="ant" use-expressions="true">
	            <security:intercept-url pattern="/error/**" access="permitAll" />
	            <security:intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
	            <security:intercept-url pattern="/manage/**" access="hasAnyRole('MANAGER','ADMIN')"/>
	            <security:intercept-url pattern="/user/**" access="hasAnyRole('USER','MANAGER','ADMIN')"/>
	            <security:intercept-url pattern="/database/**" access="hasAnyRole('USER','MANAGER','ADMIN')"/>
	            <security:intercept-url pattern="/guest/**" access="!hasAnyRole('USER','MANAGER','ADMIN')"/>
	            <security:intercept-url pattern="/**" access="isAuthenticated()"/>
	        </security:filter-security-metadata-source>
	    </property>
	</bean>

	<bean id="httpRequestAccessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions" value="false" />
		<property name="decisionVoters">
			<list>
				<ref bean="webExpressionVoter" />
				<ref bean="authenticatedVoter" />
			</list>
		</property>
	</bean>

	<bean id="webExpressionVoter"
		class="org.springframework.security.web.access.expression.WebExpressionVoter" />
		
	<bean id="authenticatedVoter"
		class="org.springframework.security.access.vote.AuthenticatedVoter" />
		
</beans>