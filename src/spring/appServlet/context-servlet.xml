<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
                           http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-3.2.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- interceptors.xml import -->
	<import resource="context-interceptors.xml" />

	<mvc:resources location="/webstatic/" mapping="/webstatic/**" />
	<mvc:default-servlet-handler />
	<!-- controller init bind -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />

	<!-- component scan (Controller) -->
	<context:component-scan base-package="com.varsql.web">
		<context:include-filter type="annotation" expression="org.springframework.context.annotation.Configuration"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	    <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
		<context:include-filter type="regex"
			expression="(service|controller)\..*" />
	</context:component-scan>
	
	<mvc:annotation-driven>
	    <mvc:message-converters>
	        <!-- @ResponseBody로 String 처리할때 한글처리 -->
	         <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	            <property name="objectMapper" ref="jacksonObjectMapper"/>
	        </bean>
	    </mvc:message-converters>
	</mvc:annotation-driven>

	<!-- @MVC & binding convert -->
	<mvc:annotation-driven conversion-service="conversionService" />
	
	<bean id="tilesviewResolvers" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="order" value="1" />
	    <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
	</bean>
	
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" >
	    <property name="definitions">
	    	<list>
	        	<value>/WEB-INF/tiles.xml</value>
	        </list>
	    </property>
	</bean>
	
	<!-- bean id="viewResolvers"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="2" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="contentType" value="text/html; charset=UTF-8" />
	</bean -->

	<!-- you can't call it objectMapper for some reason -->
	<bean name="jacksonObjectMapper"
		class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
		<property name="featuresToDisable">
			<array>
				<util:constant
					static-field="com.fasterxml.jackson.databind.SerializationFeature.WRITE_DATES_AS_TIMESTAMPS" />
			</array>
		</property>
	</bean>
	
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="0" />
		
		<property name="contentNegotiationManager">
			<bean class="org.springframework.web.accept.ContentNegotiationManager">
				<constructor-arg>
					<bean
						class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
						<constructor-arg>
							<map>
								<entry key="atom" value="application/atom+xml" />
								<entry key="html" value="text/html" />
							</map>
						</constructor-arg>
					</bean>
				</constructor-arg>
			</bean>
		</property>

		<property name="defaultViews">
			<list>
				<!-- XML View -->
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<constructor-arg>
						<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
							<property name="packagesToScan">
								<list>
									<value>documentLoader.domain</value>
								</list>
							</property>
						</bean>
					</constructor-arg>
				</bean>
			</list>
		</property>
	</bean>
	
	<!-- multipart -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</bean>

</beans>